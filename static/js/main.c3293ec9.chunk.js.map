{"version":3,"sources":["components/Card.js","components/CardGrid.js","components/GameDescription.js","components/GameScore.js","components/GameTitle.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Card","caption","imgUrl","eventHandler","className","id","onClick","e","style","backgroundImage","process","string","newCaption","split","join","toUpperCase","makeCaption","src","alt","CardGrid","props","state","deck","url","currentScore","highScore","cardIds","checkId","bind","shuffleDeck","console","log","this","includes","setState","array","oldDeck","freshDeck","length","num","Math","floor","random","temp","splice","push","cards","document","querySelectorAll","Array","from","forEach","card","addEventListener","cardContent","transform","setTimeout","querySelector","innerText","map","obj","index","Component","GameDescription","useState","show","setShow","GameScore","GameTitle","title","children","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3293ec9.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Card({ caption, imgUrl, eventHandler }) {\n  const makeCaption = (string) => {\n    let newCaption = string.split(\"-\");\n    newCaption = newCaption.join(\" \");\n    return newCaption.toUpperCase();\n  };\n  return (\n    <div\n      className=\"card\"\n      id={caption}\n      onClick={(e) => {\n        eventHandler(caption);\n      }}\n    >\n      <div className=\"card-content\">\n        <div className=\"card-front\">\n          <div\n            style={{\n              backgroundImage: `url(${process.env.PUBLIC_URL + imgUrl})`,\n            }}\n            className=\"card-img\"\n          ></div>\n          <div className=\"card-caption\">\n            <h3>{makeCaption(caption)}</h3>\n          </div>\n        </div>\n        <div className=\"card-back\">\n          <img\n            src=\"https://static.wikia.nocookie.net/hunterxhunter/images/0/05/Hunter_Association_logo.png/revision/latest?cb=20180405075402\"\n            alt=\"hunter x hunter logo\"\n          ></img>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\n\nexport default class CardGrid extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      deck: [\n        { url: \"/assets/alluka_zoldyck.jpeg\", id: \"alluka-zoldyck\" },\n        { url: \"/assets/chrollo_lucilfer.jpeg\", id: \"chrollo-lucilfer\" },\n        { url: \"/assets/feitan_portor.jpeg\", id: \"feitan-portor\" },\n        { url: \"/assets/ging_freecss.png\", id: \"ging-freecss\" },\n        { url: \"/assets/gon_freecss.jpeg\", id: \"gon-freecss\" },\n        { url: \"/assets/hisoka.jpeg\", id: \"hisoka\" },\n        { url: \"/assets/illumi_zoldyck.png\", id: \"illumi-zoldyck\" },\n        { url: \"/assets/issac_netero.png\", id: \"issac-netero\" },\n        { url: \"/assets/killua_zoldyck.jpeg\", id: \"killua-zoldyck\" },\n        { url: \"/assets/kite.jpeg\", id: \"kite\" },\n        { url: \"/assets/leorio.png\", id: \"leorio\" },\n        { url: \"/assets/meruem.jpeg\", id: \"meruem\" },\n      ],\n      currentScore: 0,\n      highScore: 0,\n      cardIds: [],\n    };\n    this.checkId = this.checkId.bind(this);\n    this.shuffleDeck = this.shuffleDeck.bind(this);\n  }\n  checkId(id) {\n    console.log(`top id is ${id}`);\n    if (this.state.cardIds.includes(id)) {\n      this.setState({ cardIds: [] });\n      if (this.state.currentScore > this.state.highScore) {\n        this.setState({ highScore: this.state.currentScore });\n      }\n      this.setState({ currentScore: 0 });\n      console.log(\"game over\");\n    } else {\n      this.setState({\n        cardIds: [...this.state.cardIds, id],\n        currentScore: this.state.currentScore + 1,\n      });\n    }\n    console.log(`bottom id is ${id}`);\n  }\n  shuffleDeck(array) {\n    let oldDeck = [...array];\n    let freshDeck = [];\n    while (freshDeck.length !== 12) {\n      // pick number between 0 - oldDeck.length\n      let num = Math.floor(Math.random() * oldDeck.length);\n      let temp = oldDeck.splice(num, 1);\n      if (temp[0] !== \"undefined\") {\n        freshDeck.push(temp[0]);\n      }\n    }\n    return freshDeck;\n  }\n  //\n  componentDidMount() {\n    console.log(\"did mount\");\n    this.setState({ deck: this.shuffleDeck(this.state.deck) });\n    const cards = document.querySelectorAll(\".card\");\n    let cardsArray = Array.from(cards);\n    cardsArray.forEach((card) => {\n      card.addEventListener(\"click\", (e) => {\n        const cardContent = document.querySelectorAll(\".card-content\");\n        cardContent.forEach((card) => {\n          card.style.transform = \"rotateY(180deg)\";\n        });\n        setTimeout(() => {\n          this.setState({ deck: this.shuffleDeck(this.state.deck) });\n        }, 900);\n        setTimeout(() => {\n          cardContent.forEach((card) => {\n            card.style.transform = \"rotateY(0deg)\";\n          });\n        }, 1100);\n      });\n    });\n  }\n  //\n  componentDidUpdate() {\n    console.log(\"did update\");\n    const currentScore = document.querySelector(\"#game-current-score\");\n    const highScore = document.querySelector(\"#game-high-score\");\n    highScore.innerText = this.state.highScore;\n    currentScore.innerText = this.state.currentScore;\n  }\n  render() {\n    return (\n      <>\n        <div id=\"card-grid\">\n          {this.state.deck.map((obj, index) => {\n            return (\n              <Card\n                eventHandler={this.checkId}\n                key={index}\n                caption={obj.id}\n                imgUrl={obj.url}\n              />\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { useState } from \"react\";\n\nfunction GameDescription() {\n  const [show, setShow] = useState(false);\n  return (\n    <div id=\"game-description-div\">\n      <button onClick={() => setShow(true)}> ? </button>\n      {show && (\n        <span onClick={() => setShow(false)}>\n          This application puts your memory to the test. You are presented with\n          multiple images of manga characters. The images get shuffled\n          every-time they are clicked. You CAN NOT click on any image more than\n          once or else your score resets to zero. The main objective is to get\n          the highest score as possible.\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default GameDescription;\n","import React from \"react\";\n\nfunction GameScore() {\n  return (\n    <div id=\"game-score-div\">\n      <h1>\n        HighScore : <span id=\"game-high-score\"></span>\n      </h1>\n      <h1>\n        CurrentScore : <span id=\"game-current-score\"></span>\n      </h1>\n    </div>\n  );\n}\n\nexport default GameScore;\n","import React from \"react\";\n\nfunction GameTitle({ title, children }) {\n  return (\n    <div id=\"game-title-div\">\n      <div id=\"game-logo-div\">\n        <img\n          src=\"https://static.wikia.nocookie.net/hunterxhunter/images/0/05/Hunter_Association_logo.png/revision/latest?cb=20180405075402\"\n          alt=\"hunter x hunter logo\"\n        ></img>\n        <h1>{title}</h1>\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default GameTitle;\n","import React from \"react\";\nimport GameDescription from \"./GameDescription\";\nimport GameScore from \"./GameScore\";\nimport GameTitle from \"./GameTitle\";\n\nfunction Header() {\n  return (\n    <header>\n      <GameTitle title=\"Memory Game\">\n        <GameDescription />\n      </GameTitle>\n      <GameScore />\n    </header>\n  );\n}\n\nexport default Header;\n","import CardGrid from \"./components/CardGrid\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div id=\"container\">\n      <Header />\n      <CardGrid />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}